/* ******* PARTS: INPUT ******* */

.pt__input {
    position: relative;

    .icon {
        .icon.initial;
        min-height: 0;
        padding: 0;
        position: absolute;
        border-radius: max(@CmBorder-Radius - 2px, 0px);
        color: @CmColor-Border;
    }

    &.no-label {
        .input {
            font-size: 0;
        }
    }

    &.disabled {
        .input {
            cursor: default;
        }

        .icon {
            cursor: default;
            opacity: @CmUI-Opacity-Hover;
        }
    }

    .pt__input--size(@CmForm-FieldHeight, @CmInput-Padding, @CmBorder-Width, @CmFont-Base-LineHeight);

    &.size-large {
        .pt__input--size(@CmSize-Large, @CmInput-Padding, @CmBorder-Width, @CmFont-Base-LineHeight);
    }

    &.size-xlarge {
        .pt__input--size(@CmSize-XLarge, @CmInput-Padding, @CmBorder-Width, @CmFont-Base-LineHeight);
    }

    &.size-xxlarge {
        .pt__input--size(@CmSize-XXLarge, @CmInput-Padding, @CmBorder-Width, @CmFont-Base-LineHeight);
    }
}

.pt__input--size (@height: @CmForm-FieldHeight, @paddingX: @CmInput-Padding, @borderWidth: @CmBorder-Width, @lineHeight: @CmFont-Base-LineHeight){
    .pt__input--size-helper(@height, @paddingX, @borderWidth, @lineHeight);

    &.is-borderless {
        .pt__input--size-helper(@height, @paddingX, 0px, @lineHeight);
    }
}

.pt__input--size-helper (@height, @paddingX, @borderWidth, @lineHeight) {
    @iconSize: @height - @borderWidth * 2;
    @iconSizeDouble: @iconSize * 2;
    @iconPadding: @iconSize + @paddingX;

    height: @height;

    .input {
        .input--size(@height, @paddingX, @borderWidth, @lineHeight);
    }

    .icon {
        height: @iconSize;
        width: @iconSize;

        &:first-child {
            .mx__position(@borderWidth, auto, auto, @borderWidth);
        }

        &:last-child {
            .mx__position(@borderWidth, @borderWidth, auto, auto);
        }
    }

    &:not(.is-icon-outside):not(.is-no-label) {
        .input {
            &:not(:first-child) {
                padding-left: @iconPadding;
            }

            &:not(:last-child) {
                padding-right: @iconPadding;
            }
        }

        &.is-less-indent {
            .input {
                &:not(:first-child) {
                    padding-left: @iconSize;
                }

                &:not(:last-child) {
                    padding-right: @iconSize;
                }
            }
        }
    }

    &.is-icon-outside {
        .input {
            &:not(:first-child) {
                width: calc(~"100% - @{iconSize}");;
                margin-left: @iconSize;
            }

            &:not(:last-child) {
                width: calc(~"100% - @{iconSize}");;
                margin-right: @iconSize;
            }

            &:not(:first-child):not(:last-child) {
                width: calc(~"100% - @{iconSizeDouble}");;
            }
        }
    }

    &.is-no-label {
        .input {
            padding-left: 0;
            padding-right: 0;
        }
    }
}