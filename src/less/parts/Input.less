/* ******* PARTS: INPUT ******* */

.pt__input {
    position: relative;

    .icon {
        .icon.initial;
        min-height: 0;
        padding: 0;
        position: absolute;
        border-radius: max(@CmBorder-Radius - 2px, 0px);
        color: @CmColor-Icon;
    }

    &.no-label {
        .input {
            font-size: 0;
        }
    }

    &.disabled {
        .input {
            cursor: default;
        }

        .icon {
            cursor: default;
            opacity: @CmUI-Opacity-Hover;
        }
    }

    .pt__input--size(@CmForm-FieldHeight);

    &.size-large {
        .pt__input--size(@CmSize-Large);
    }

    &.size-xlarge {
        .pt__input--size(@CmSize-XLarge);
    }

    &.size-xxlarge {
        .pt__input--size(@CmSize-XXLarge);
    }

    &.is-icon-compact {
        .icon {
            width: @CmSize-Small;
            background-size: @CmSize-XSmall;
        }

        .input {
            &:not(:first-child) {
                padding-left: @CmSize-Small;
            }

            &:not(:last-child) {
                padding-right: @CmSize-Small;
            }
        }
    }
}

.pt__input--size (
    @height: @CmForm-FieldHeight,
    @paddingX: @CmInput-Padding,
    @borderWidth: @CmBorder-Width,
    @lineHeight: @CmFont-Base-LineHeight,
    @gap: var(--cm-input--icon-gap)
){
    .pt__input--size-helper(@height, @paddingX, @borderWidth, @lineHeight, @gap);

    &.is-borderless {
        .pt__input--size-helper(@height, @paddingX, 0px, @lineHeight, @gap);
    }
}

.pt__input--size-helper (@height, @paddingX, @borderWidth, @lineHeight, @gap) {
    @iconSize: @height - @borderWidth * 2;
    @iconSizeDouble: @iconSize * 2;
    @iconPadding: calc(@iconSize + @gap);

    min-height: @height;

    .input {
        .input--size(@height, @paddingX, @borderWidth, @lineHeight);

        &:not(:first-child) {
            padding-left: @iconPadding;
        }

        &:not(:last-child) {
            padding-right: @iconPadding;
        }
    }

    .textarea {
        .textarea--size(@height, @paddingX, @borderWidth, @lineHeight);
    }

    .icon {
        height: @iconSize;
        width: @iconSize;

        &.pull-left,
        &:first-child {
            .mx__position(@borderWidth, auto, auto, @borderWidth);
        }

        &.pull-right,
        &:last-child {
            .mx__position(@borderWidth, @borderWidth, auto, auto);
        }
    }

    &.has-icon-before {
        .input {
            padding-left: @iconPadding;
        }
    }

    &.has-icon-after {
        .input {
            padding-right: @iconPadding;
        }
    }

    &.is-less-indent {
        --cm-input--icon-gap: 0px;
    }

    &.is-icon-outside {
        .input {
            &:not(:first-child) {
                padding-left: @paddingX;
            }

            &:not(:last-child) {
                padding-right: @paddingX;
            }

            &:not(:first-child) {
                width: calc(~"100% - @{iconSize}");;
                margin-left: @iconSize;
            }

            &:not(:last-child) {
                width: calc(~"100% - @{iconSize}");;
                margin-right: @iconSize;
            }

            &:not(:first-child):not(:last-child) {
                width: calc(~"100% - @{iconSizeDouble}");;
            }
        }
    }

    &.is-no-label {
        .input {
            padding-left: 0;
            padding-right: 0;

            &:not(:first-child) {
                padding-left: 0;
            }

            &:not(:last-child) {
                padding-right: 0;
            }
        }
    }
}