.pt__check-line {
    @padding_calc: (@CmForm-FieldHeight - @CmFont-Base-LineHeight) / 2;
    @padding: max(floor((@padding_calc)), 0px);
    @margin_calc: (@CmFont-Base-LineHeight - 13px) / 2;
    @margin: max(floor((@margin_calc)), 0px);

    min-height: @CmForm-FieldHeight;
    line-height: @CmForm-FieldHeight;

    label {
        margin-right: @CmIndent-Medium;
        padding: @padding 0;
        cursor: pointer;
        display: inline-block;
        vertical-align: baseline;
        line-height: @CmFont-Base-LineHeight;

        &:first-child {
            margin-left: 0;
        }

        &:last-child {
            margin-right: 0;
        }
    }

    input[type="radio"],
    input[type="checkbox"] {
        margin: @margin @CmForm-FieldInnerIndent @margin 0;
        vertical-align: top;
        padding: 0;
        cursor: pointer;

        &:checked + .unveil,
        &:checked + .label + .unveil {
            display: block;
        }
    }

    .label {
        display: inline;
    }

    > .fields {
        &.unveil {
            display: none;
        }
    }

    &.pull-center {
        text-align: center;
    }

    &.disabled {
        label {
            color: @CmColor-Font-Disabled;
            cursor: default;
        }
    }

    &.has-hover {
        label {
            margin-right: @CmBorder-Width;
            padding: @padding @CmForm-FieldInnerIndent;
            border-radius: @CmBorder-Radius;
        }

        &:not(.disabled) {
            label {
                .mx__transition(all, @CmUI-Transition-Duration);

                /* Emulate :focus-visible-within. */
                /* Separate rules because Firefox doesn't support this syntax yet. */
                &:has(:focus-visible) {
                    background: @CmColor-Primary-LightHover;
                    .mx__transition(all, @CmUI-Transition-DurationReverse);

                    &.active {
                        background: @CmColor-Primary-LightActiveHover;
                    }
                }

                &:is(:hover, :focus-visible) {
                    background: @CmColor-Primary-LightHover;
                    .mx__transition(all, @CmUI-Transition-DurationReverse);

                    &.active {
                        background: @CmColor-Primary-LightActiveHover;
                    }
                }

                &.active {
                    background: @CmColor-Primary-LightActive;
                }

                &:active {
                    background: @CmColor-Primary-LightActiveHover;
                }
            }
        }

        &.disabled {
            label {
                &.active {
                    background: @CmColor-Secondary-LightHighlight;
                }
            }
        }
    }

    &.has-fields {
        .display-flex;

        label {
            display: block;
            margin: 0;
            padding: 0;
        }

        .label {
            @padding_calc: (@CmForm-FieldHeight - @CmFont-Base-LineHeight) / 2;
            @padding: max(round((@padding_calc)), 0px);
            display: inline-block;
            padding: @padding 0 @padding 0;
        }

        > .fields {
            margin: 0 0 0 @CmIndent-XSmall;
            .mx__flex(1);
        }
    }

    &.has-fields-box {
        input[type="radio"],
        input[type="checkbox"] {
            @margin_calc: (@CmForm-FieldHeight - 13px) / 2;
            @margin: max(floor((@margin_calc)), 0px);
            margin-top: @margin;
            margin-bottom: @margin;
        }
    }

    &.is-box {
        label {
            display: block;
        }

        input[type="radio"],
        input[type="checkbox"] {
            float: left;
        }

        .label {
            overflow: hidden;
            display: block;
        }
    }

    &.is-flex,
    &.is-flex-reverse {
        label {
            display: flex;
            gap: @CmForm-FieldInnerIndent;
            align-items: flex-start;
        }

        input[type="radio"],
        input[type="checkbox"] {
            margin-right: 0;
            margin-left: 0;
            flex: none;
        }

        .icon {
            min-height: @CmFont-Base-LineHeight;
            flex: none;
        }

        .label {
            flex: auto;
        }
    }

    &.is-flex-reverse {
        label {
            flex-direction: row-reverse;
        }
    }
}
